- name: Setup Kubernetes Environment
  hosts: all
  become: true
  vars:
    k8s_url_apt_key: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key"
    k8s_gpgpath: /etc/apt/keyrings//kubernetes-apt-keyring.gpg
    k8s_repository: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/"
  gather_facts: true
  tasks:
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a

    - name: Remove Docker and related packages
      apt:
        name: "{{ item }}"
        state: absent
      loop:
        - docker.io
        - docker-doc
        - docker-compose
        - docker-compose-v2
        - podman-docker
        - containerd
        - runc

    - name: Install required packages
      apt:
        name:
          - socat
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: true


    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        update_cache: true

    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Copy containerd config file
      ansible.builtin.copy:
        src: ./config/config.toml
        dest: /etc/containerd/config.toml

    - name: Load necessary kernel modules for Kubernetes
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter

    - name: Load overlay module
      ansible.builtin.modprobe:
        name: overlay
        state: present

    - name: Load br_netfilter module
      ansible.builtin.modprobe:
        name: br_netfilter
        state: present

    - name: Set sysctl parameters for Kubernetes networking
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1

    - name: Apply sysctl settings
      ansible.builtin.command: sysctl --system

    - name: Enable and restart Containerd service
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: restarted

    - name: Reload sysctl
      command: sysctl --system


    - name: Get Kubernetes package key
      shell: curl -fsSL {{ k8s_url_apt_key }} | gpg --dearmor -o {{ k8s_gpgpath }}
      args:
        creates: "{{ k8s_gpgpath }}"

    - name: Install Kubernetes repository
      apt_repository:
        filename: kubernetes
        repo: "deb [signed-by={{ k8s_gpgpath }}] {{ k8s_repository }} /"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
        create: yes

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: started

